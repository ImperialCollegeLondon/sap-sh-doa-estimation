function [Phi Theta Quad] = sphDist(config,N)

%   Distribution of points on a sphere
%
%   [Phi Theta] = sphDist(config,N)
%
%   Inputs:
%       config  Configuration:
%               'Equiangle'=equiangle. azimuth and inclination divided into 
%               approx. sqrt(N) points.
%               'Gaussian'=Gaussian. (Note that this is not the Gaussian sampling that Rafaely refers to...)
%               'em32'=EigenMike.
%       N       [Optional] Number of sensors. Required for 'Equiangle' and 
%               'Gaussian'.
%
%   Outputs:
%       Phi     Mx1 vector of azimuth angles in [0 2*pi).
%       Theta   Mx1 vector of inclination angles in [0 pi].
%		Quad	Mx1 vector of quadrature weights (currently only for config = 'em32')
%
%   References:
%       B. Rafaely, "Analysis and Design of Spherical Microphone Arrays,"
%       IEEE Trans. Speech and Audio Processing, vol. 13, no. 1, Jan. 2005.
%		M. C. T. Chan, "Theory and Design of Higher Order Sound Field Recording,"
%		Honours Thesis, p. 27, June 2003
%		S. Sobolev, "On mechanical quadrature formulas on the sphere," 
%		Siberian Mathematical Journal, vol. 3, pp. 769â€“796, 1962.
%
%**************************************************************************
% Author:           M. R. P. Thomas, D. P. Jarrett
% Date:             29 June 2012
% Version: $Id: sphDist.m 9225 2016-12-21 12:04:35Z amoore1 $
%**************************************************************************

narginchk(1,2);

if(strcmpi(config,'Equiangle'))
    rN = round(sqrt(N));                    % Find closest sqrt
    Theta = (0:pi/(rN-1):pi).';             % Distribute evenly
    Phi = (0:2*pi/rN:2*pi-2*pi/rN).';    
    Theta=reshape(ones(rN,1)*Theta',rN^2,1);
    Phi=repmat(Phi,rN,1);
	% TODO: Work out quadrature weights for equiangular sampling
	Quad = zeros(rN^2, 1);		
    %disp(['True points = ' num2str(rN^2) '. Max. spherical harmonic order = ' num2str(floor(rN/2-1)) '.']);
elseif(strcmpi(config,'Gaussian'))
    p=[randn(N,1) randn(N,1) randn(N,1)];   % Generate random points
    p=p./repmat(sqrt(sum(p.^2,2)),1,3);     % Normalize
    %disp(['True points = ' N '. Max. spherical harmonic order = ' num2str( floor(sqrt(N/2)-1) ) '.']);
    [Phi Theta] = mycart2sph(p(:,1),p(:,2),p(:,3));
	% TODO: Work out quadrature weights for Gaussian sampling
	Quad = zeros(N, 1);	
elseif(strcmpi(config,'em32'))
	% Quadrature weight for microphone at centre of pentagonal face
	quad_pent = 5*pi/42;
	% Quadrature weight for microphone at centre of hexagonal face	
	quad_hex = 9*pi/70;
    sensor_positions = [69 0;...
                        90 32;...
                        111 0;...
                        90 328;...
                        32 0;...
                        55 45;...
                        90 69;...
                        125 45;...
                        148 0;...
                        125 315;...
                        90 291;...
                        55 315;...
                        21 91;...
                        58 90;...
                        121 90;...
                        159 89;...
                        69 180;...
                        90 212;...
                        111 180;...
                        90 148;...
                        32 180;...
                        55 225;...
                        90 249;...
                        125 225;...
                        148 180;...
                        125 135;...
                        90 111;...
                        55 135;...
                        21 269;...
                        58 270;...
                        122 270;...
                        159 271];
    Theta = sensor_positions(:,1)*pi/180;
    Phi = sensor_positions(:,2)*pi/180;
	Quad = zeros(32, 1);
	% All microphones are at centre of hexagonal face, except...
	Quad(1:32) = quad_hex;
	% 12 microphones which are at centre of pentagonal face
	Quad([2 4 5 9 14 15 18 20 21 25 30 31]) = quad_pent;
end